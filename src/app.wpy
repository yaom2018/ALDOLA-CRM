<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import '@/baseApi.js'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/tabs/member',
      'pages/tabs/coupon',
      //   'pages/other/login',
      'pages/other/mydetail',
      'pages/other/mycounon',
      'pages/other/coupondetail',
      'pages/other/search',
      'pages/other/information',
      'pages/other/integral'
    ],
    permission: {
      'scope.userLocation': {
        desc: '位置信息用于获取最近线下门店'
      }
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    navigateToMiniProgramAppIdList: ['wx627972fa7b9597ee'],
    tabBar: {
      // 选中的文本颜色
      selectedColor: '#BF8876',
      color: '#ccc',
      // tabBar 的列表
      list: [
        {
          // 页面路径
          pagePath: 'pages/tabs/member',
          // 显示的文本
          text: '会员中心',
          // 默认图标
          iconPath: '/assets/icons/home.png',
          // 选中图标
          selectedIconPath: '/assets/icons/home_a.png'
        },
        {
          // 页面路径
          pagePath: 'pages/tabs/coupon',
          // 显示的文本
          text: '活动',
          // 默认图标
          iconPath: '/assets/icons/couponlingqu.png',
          // 选中图标
          selectedIconPath: '/assets/icons/couponlingqu_a.png'
        }
      ]
    },
    usingComponents: {
      'van-icon': './assets/vant/icon/index',
      'van-tab': './assets/vant/tab/index',
      'van-tabs': './assets/vant/tabs/index',
      'van-field': './assets/vant/field/index',
      'van-overlay': './assets/vant/overlay/index',
      'van-button': './assets/vant/button/index',
      'van-picker': './assets/vant/picker/index',
      'van-popup': './assets/vant/popup/index',
      'van-cell': './assets/vant/cell/index',
      'van-cell-group': './assets/vant/cell-group/index'
    }
  }

  globalData = {
    userInfo: null,
    vipInfo: null,
    // eid: 'LS000000',
    // eid: 'e20160913452612100',
    eid: 'E20191021395812101',
    openid: '',
    unionid: '',
    sessionKey: '',
    phone: '',
    uncouponnum: 0
  }

  constructor() {
    super()
    this.use('requestfix')
    // 通过下面这一行代码，可以为异步的API，
    // 开启Promise功能，这样，异步API调用的结果，返回值是Promise对象
    this.use('promisify')
    // 拦截器
    this.intercept('request', {
      // 发出请求时的回调函数
      config(p) {
        // 显示loading效果
        wepy.showLoading({
          title: '数据加载中...'
        })
        // 必须返回OBJECT参数对象，否则无法发送请求到服务端
        return p
      },

      // 请求成功后的回调函数
      success(p) {
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p
      },

      // 请求失败后的回调函数
      fail(p) {
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p
      },

      // 请求完成时的回调函数(请求成功或失败都会被执行)
      complete(p) {
        // 隐藏loading效果
        wepy.hideLoading()
      }
    })
  }
  onLaunch() {
    // this.getSetting()
  }
  async checkLogin() {
    let loginFlag = wx.getStorageSync('loginFlag')
    // 登录状态
    // 用户信息授权状态
    if (loginFlag) {
      // 检查session_key是否过期
      const checksessionres = await wepy.checkSession().catch(err => err)
      console.log(checksessionres, '检查session_key是否过期')
      if (checksessionres.errMsg !== 'checkSession:ok') {
        return { loginstatu: false, mes: 'sessionkey过期' }
      }
      return { loginstatu: true, mes: 'sessionkey正常' }
    } else {
      // 首次登录
      console.log('首次登录')
      return { loginstatu: false }
      //   this.doLogin()
    }
  }
  async getuserInfo() {
    const userinfoRes = await wepy.getUserInfo().catch(err => err)
    console.log(userinfoRes, '有登陆过直接获取userinfo')
    if (userinfoRes.errMsg !== 'getUserInfo:ok') {
      console.log('没有授权用户信息')

      //   this.globalData.showcheckphone = true
      // wx.navigateTo({
      //   url: '/pages/other/login?messageshow=true'
      // })
      // wepy.Toast('请授权用户信息', 'none')
      return {
        userinfostatu: false,
        mes: '没有授权用户信息'
      }
    }
    return {
      userinfostatu: true,
      mes: '已用户信息',
      userInfomessage: userinfoRes.userInfo
    }
    // this.globalData.userInfo = userinfoRes.userInfo
    // console.log(userinfoRes.userInfo)
    // if (this.userInfoReadyCallback) {
    //   this.userInfoReadyCallback(userinfoRes)
    // }
  }
  // 发起登录
  async doLogin() {
    let loginRes = await wepy.login().catch(err => err)
    console.log(loginRes, 'login')
    if (!loginRes.errMsg === 'login:ok') {
      return {
        statu: false,
        mes: '请求登录接口失败'
      }
    }

    if (!loginRes.code) {
      return {
        statu: false,
        mes: '请求登录接口code获取失败'
      }
    }

    // 发送 res.code 到后台换取 openId, sessionKey, unionId
    let params = {
      eid: this.globalData.eid,
      code: loginRes.code
    }
    //   登录后台
    let { data: sessionRes } = await wepy.post('/session/getsessionkey', params)
    console.log(sessionRes, '登录获取sessionkey')
    if (!sessionRes.statu) {
      return {
        statu: false,
        mes: '登录失败'
      }
    }

    this.globalData.openid = sessionRes.t.openid
    this.globalData.unionid = sessionRes.t.unionid
    this.globalData.sessionKey = sessionRes.t.session_key
    return {
      statu: true,
      mes: '登录成功'
    }
  }

  // 获取已领取的优惠券数量
  async getcounon(types) {
    // 发请求
    let params = {
      eid: this.globalData.vipInfo.eid,
      vipid: this.globalData.vipInfo.vid,
      ctype: types
    }
    console.log(params, 99)
    const { data: res } = await wepy.post('/coupon/getmycoupon', params)
    console.log(res, '未使用的优惠券全局')
    if (!res.statu) {
      return { statu: false, mes: res.mes ? res.mes : '获取优惠券失败' }
    }

    if (res.rows) {
      this.globalData.uncouponnum = res.rows.length
    }
    return { statu: true, mes: '获取优惠券成功' }
    // 获取到结果回调函数
  }
  // 判断授权状态,有就直接赋值，没有就手动点击授权并获取赋值

  //   获取会员信息
  async getVipInfo(dataparams) {
    let params = {
      eid: this.globalData.eid,
      wxid: dataparams.wxid,
      unionid: dataparams.unionid,
      iv: dataparams.iv,
      encryptedData: dataparams.encryptedData,
      sessionKey: dataparams.sessionKey
    }
    // 校验用户的手机号
    console.log(params, '校验手机号')

    const { data: res } = await wepy.post('/register/checkphone', params)
    console.log(res, '校验结果')

    if (!res.statu) return { statu: false, mes: '校验手机号失败' }
    return { statu: true, mes: '校验手机号成功', vipInfo: res.t }
    // this.globalData.vipInfo = res.t
    // _this.globalData.vipInfo = res.t
    // if (_this.vipInfoReadyCallback) {
    //   _this.vipInfoReadyCallback(res)
    // }
  }

  async getVipInfo2(userInfo, _this) {
    let parent = {
      eid: this.globalData.eid,
      usOpenid: this.globalData.openid,
      usUnionid: this.globalData.unionid,
      usNickname: userInfo.nickName,
      usSex: userInfo.gender,
      usLanguage: userInfo.language,
      usCity: userInfo.city,
      usProvince: userInfo.province,
      usCountry: userInfo.country,
      usHeadimgurl: userInfo.avatarUrl,
      usSubscribeTime: Date.parse(new Date()) / 1000
    }
    // console.log(parent,77);

    const { data: res } = await wepy.post('/session/getparam', parent)
    // console.log(res, 888)
    return res

    // this.globalData.vipInfo = res.t
    // _this.globalData.vipInfo = res.t
    // if (_this.vipInfoReadyCallback) {
    //   _this.vipInfoReadyCallback(res)
    // }
  }
}
</script>
